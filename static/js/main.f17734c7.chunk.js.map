{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","props","movies","map","imdbID","getData","url","a","fetch","response","json","FindMovie","React","memo","addMovie","useState","title","setTitle","setMovie","errorTitle","setErrorTitle","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","then","Error","App","state","some","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"+VAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC3BGC,EAA8B,SAACC,GAC1C,IAAQC,EAAWD,EAAXC,OAER,OACE,qBAAKR,UAAU,SAAf,SACGQ,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMW,c,uCCbRC,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEIC,MAAM,GAAD,OAJf,2CAIe,eAAmBF,EAAnB,MAFT,cAEbG,EAFa,gBAINA,EAASC,OAJH,iGAMZ,kBANY,yDAAH,sDCOPC,EAA6BC,IAAMC,MAAK,YAAmB,IAAhBC,EAAe,EAAfA,SACtD,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,MAAnC,mBAAOtB,EAAP,KAAcyB,EAAd,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KA4BA,OACE,qCACE,uBAAM1B,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAAQ,cAAjC,yBAIA,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9B,UAAS,gBAAWyB,GAAc,aAClCM,MAAOT,EACPU,SAzCS,SAACC,GACpBP,GAAc,GACdH,EAASU,EAAMC,OAAOH,YA0CfN,GACC,mBAAGzB,UAAU,iBAAb,qDAKJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,kBACVmC,QAlDS,WACnBxB,EAAQW,GACLc,MAAK,SAAArB,GACCA,EAASsB,OAGZb,EAAS,MACTE,GAAc,IAHdF,EAAST,OA2CP,4BAQDhB,GAEC,qBAAKC,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,oBACVmC,QAjDS,WACjBpC,IACFqB,EAASrB,GACTyB,EAAS,MACTD,EAAS,IACTG,GAAc,KAyCN,qCAYR,sBAAK1B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GACI,cAAC,EAAD,CAAWA,MAAOA,aCnFlBuC,EAAb,4MACEC,MAAe,CACb/B,OAAQ,IAFZ,EAKEY,SAAW,SAACW,GACQ,EAAKQ,MAAM/B,OAC1BgC,MAAK,SAAAzC,GAAK,OAAIA,EAAMW,SAAWqB,EAAMrB,WAGtC,EAAK+B,UAAS,SAAAF,GAAK,MAAK,CACtB/B,OAAO,GAAD,mBACD+B,EAAM/B,QADL,CAEJuB,SAbV,4CAmBE,WACE,IAAQvB,EAAWkC,KAAKH,MAAhB/B,OAER,OACE,sBAAKR,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYQ,OAAQA,MAEtB,qBAAKR,UAAU,UAAf,SACE,cAAC,EAAD,CAAWoB,SAAUsB,KAAKtB,oBA5BpC,GAAyBuB,aCLzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f17734c7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=6fc09e40';\n\nexport const getData = async (url:string) => {\n  try {\n    const response = await fetch(`${BASE_URL}&t=[${url}]`);\n\n    return await response.json();\n  } catch (error) {\n    return 'Not find movie';\n  }\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getData } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (value: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = React.memo(({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [errorTitle, setErrorTitle] = useState(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setErrorTitle(false);\n    setTitle(event.target.value);\n  };\n\n  const getFindMovie = () => {\n    getData(title)\n      .then(response => {\n        if (!response.Error) {\n          setMovie(response);\n        } else {\n          setMovie(null);\n          setErrorTitle(true);\n        }\n      });\n  };\n\n  const getMovieToList = () => {\n    if (movie) {\n      addMovie(movie);\n      setMovie(null);\n      setTitle('');\n      setErrorTitle(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${errorTitle && 'is-danger'}`}\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n          {errorTitle && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getFindMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n          {movie\n          && (\n            <div className=\"control\">\n              <button\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={getMovieToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie\n          && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n});\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addMovie = (value: Movie) => {\n    const findMovie = this.state.movies\n      .some(movie => movie.imdbID === value.imdbID);\n\n    if (!findMovie) {\n      this.setState(state => ({\n        movies: [\n          ...state.movies,\n          value,\n        ],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}